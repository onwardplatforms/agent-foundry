{
    "format_version": "0.1",
    "agent_runtime_version": "0.0.1",
    "schemas": {
        "runtime": {
            "version": 1,
            "block": {
                "attributes": {
                    "required_version": {
                        "type": "string",
                        "required": false,
                        "description": "Required version of Agent Runtime. Supports exact versions (0.1.0), single constraints (>=0.1.0, ~>0.1.0), or multiple constraints (>= 1.2.0, < 2.0.0)",
                        "validation": [
                            {
                                "pattern": "^(((>=|<=|>|<|!=|~>)\\s*\\d+\\.\\d+\\.\\d+\\s*(,\\s*(>=|<=|>|<|!=|~>)\\s*\\d+\\.\\d+\\.\\d+\\s*)*)|=?\\s*\\d+\\.\\d+\\.\\d+)$",
                                "error_message": "Invalid version constraint format. Examples: '0.1.0', '>=0.1.0', '>=0.1.0,<2.0.0'"
                            }
                        ]
                    }
                }
            }
        },
        "variable": {
            "version": 1,
            "block": {
                "attributes": {
                    "type": {
                        "type": "string",
                        "required": false,
                        "description": "Type constraint for the variable",
                        "validation": [
                            {
                                "options": [
                                    "string",
                                    "number",
                                    "bool",
                                    "list",
                                    "map",
                                    "any"
                                ],
                                "error_message": "Invalid variable type. Must be one of: string, number, bool, list, map, any"
                            }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "required": false,
                        "description": "Description of the variable's purpose"
                    },
                    "default": {
                        "type": "any",
                        "required": false,
                        "description": "Default value if not set"
                    },
                    "sensitive": {
                        "type": "bool",
                        "required": false,
                        "description": "Whether this variable contains sensitive data"
                    }
                }
            }
        },
        "model": {
            "version": 1,
            "block": {
                "attributes": {
                    "provider": {
                        "type": "string",
                        "required": true,
                        "description": "The AI model provider to use",
                        "validation": [
                            {
                                "options": [
                                    "openai",
                                    "ollama"
                                ],
                                "error_message": "Model provider must be either 'openai' or 'ollama'"
                            }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "required": true,
                        "description": "Name/ID of the model to use (e.g. gpt-4, gpt-3.5-turbo)"
                    }
                },
                "block_types": {
                    "settings": {
                        "nesting_mode": "single",
                        "validation": [
                            {
                                "range": {
                                    "max": 1
                                },
                                "error_message": "Only one settings block is allowed per model"
                            }
                        ],
                        "block": {
                            "attributes": {
                                "temperature": {
                                    "type": "number",
                                    "required": false,
                                    "description": "Temperature for model sampling",
                                    "validation": [
                                        {
                                            "range": {
                                                "min": 0,
                                                "max": 1
                                            },
                                            "error_message": "Temperature must be between 0 and 1"
                                        }
                                    ]
                                },
                                "max_tokens": {
                                    "type": "number",
                                    "required": false,
                                    "description": "Maximum tokens to generate",
                                    "validation": [
                                        {
                                            "range": {
                                                "min": 1
                                            },
                                            "error_message": "Maximum tokens must be at least 1"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "plugin": {
            "version": 1,
            "local": {
                "block": {
                    "attributes": {
                        "source": {
                            "type": "string",
                            "required": true,
                            "description": "Local source path",
                            "validation": [
                                {
                                    "pattern": "^(\\./.*)|(\\.\\./.*)$",
                                    "error_message": "Local plugin source must start with ./ or ../"
                                }
                            ]
                        },
                        "variables": {
                            "type": "map",
                            "required": false,
                            "description": "Variables to pass to the plugin"
                        }
                    }
                }
            },
            "remote": {
                "block": {
                    "attributes": {
                        "source": {
                            "type": "string",
                            "required": true,
                            "description": "Remote source identifier - either a full GitHub URL (https://github.com/org/agentruntime-plugin-name) or shorthand (org/name)",
                            "validation": [
                                {
                                    "pattern": "^(?:(?:https://)?github\\.com/([\\w-]+)/agentruntime-plugin-([\\w-]+)|([\\w-]+)/([\\w-]+))$",
                                    "error_message": "Remote plugin source must be a GitHub URL (https://github.com/org/agentruntime-plugin-name) or shorthand (org/name)"
                                }
                            ]
                        },
                        "version": {
                            "type": "string",
                            "required": true,
                            "description": "Version of the remote plugin. Supports exact versions (0.1.0), single constraints (>=0.1.0, ~>0.1.0), or multiple constraints (>= 1.2.0, < 2.0.0)",
                            "validation": [
                                {
                                    "pattern": "^(((>=|<=|>|<|!=|~>)\\s*\\d+\\.\\d+\\.\\d+\\s*(,\\s*(>=|<=|>|<|!=|~>)\\s*\\d+\\.\\d+\\.\\d+\\s*)*)|=?\\s*\\d+\\.\\d+\\.\\d+)$",
                                    "error_message": "Invalid version constraint format. Examples: '0.1.0', '>=0.1.0', '>=0.1.0,<2.0.0'"
                                }
                            ]
                        },
                        "variables": {
                            "type": "map",
                            "required": false,
                            "description": "Variables to pass to the plugin"
                        }
                    }
                }
            }
        },
        "agent": {
            "version": 1,
            "block": {
                "attributes": {
                    "name": {
                        "type": "string",
                        "required": true,
                        "description": "Name of the agent"
                    },
                    "description": {
                        "type": "string",
                        "required": true,
                        "description": "Description of what the agent does"
                    },
                    "system_prompt": {
                        "type": "string",
                        "required": true,
                        "description": "System prompt that defines the agent's behavior"
                    },
                    "model": {
                        "type": "string",
                        "required": true,
                        "description": "Model reference (e.g. ${model.name}) or inline definition"
                    },
                    "plugins": {
                        "type": "list",
                        "required": false,
                        "description": "List of plugin references (e.g. ${plugin.type.name}) or inline definitions"
                    }
                }
            }
        }
    }
}
